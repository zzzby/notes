class Solution {
public:
    vector<int> partitionLabels(string S) {
        map<char, int> theLastPos;
        for(int i = 0; i < S.size(); i++) {
            theLastPos[S[i]] = i;
        }
        cout << theLastPos['a'];
        vector<int> partition;
        //return partition;
        for(int i = 0; i < S.size(); i++) {
            int last = theLastPos[S[i]];
            while(i < last) {
                int temp = theLastPos[S[++i]];
                if(temp > last)
                    last = temp;
            }
            partition.push_back(last);
        }
        vector<int> ans;
        ans.push_back(partition[0] + 1);
        for(int i = 1; i < partition.size(); i++) {
            ans.push_back(partition[i] - partition[i - 1]);
        }
        return ans;
    }
};