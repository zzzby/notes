/*
// Definition for a Node.
class Node {
public:
    int val = NULL;
    vector<Node*> children;

    Node() {}

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        vector<vector<int> > ans;
        if(root == NULL) return ans;
        queue<Node*> q;
        q.push(root);
        q.push(NULL);
        vector<int> v;
        while(!q.empty()) {
            Node* temp = q.front();
            q.pop();
            if(temp != NULL) {
                v.push_back(temp->val);
                vector<Node*> vec = temp->children;
                for(auto a: vec) {
                    q.push(a);
                }
            } else {
                ans.push_back(v);
                v.clear();
                if(!q.empty())
                    q.push(NULL);
            }
        }
        return ans;
    }
};