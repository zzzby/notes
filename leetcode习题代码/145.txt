/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    // vector<int> ans;
    
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int> ans;
        if(root == NULL) 
            return ans;
        // traversal(root);
        // return ans;
        
        TreeNode* cur;
        TreeNode* pre = NULL;
        stack<TreeNode*> s;
        s.push(root);
        
        while(!s.empty()) {
            TreeNode* cur = s.top();
            if((cur->left == NULL && cur->right == NULL)
               || (pre != NULL && (pre == cur->left || pre == cur->right))) {
                ans.push_back(cur->val);
                s.pop();
                pre = cur;
            }
            else {
                if(cur->right != NULL)
                    s.push(cur->right);
                if(cur->left != NULL)
                    s.push(cur->left);
            }
        }
        return ans;
        
    }
    
    // void traversal(TreeNode* root) {
    //     if(root->left != NULL) {
    //         traversal(root->left);
    //     }
    //     if(root->right != NULL) {
    //         traversal(root->right);
    //     }
    //     if(root != NULL) {
    //         ans.push_back(root->val);
    //     }
    // }

};