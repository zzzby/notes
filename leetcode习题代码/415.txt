class Solution {
public:
    string addStrings(string num1, string num2) {
        int longer = num1.length(), shorter = num2.length();
        if(longer < shorter) return addStrings(num2, num1);
        int carry = 0;
        for(int i = longer - 1, j = shorter - 1; i >= longer - shorter; i--, j--) {
            int l_num = num1[i] - '0', s_num = num2[j] - '0';
            int cur = carry + l_num + s_num;
            if(cur >= 10) {
                num1[i] = cur - 10 + '0';
                carry = 1;
            }
            else {
                num1[i] = cur + '0';
                carry = 0;
            }
        }
        for(int i = longer - shorter - 1; i >= 0; i--) {
            int cur = carry + num1[i] - '0';
            if(cur == 10) {
                num1[i] = '0';
                carry = 1;
            }
            else {
                num1[i] = cur + '0';
                carry = 0;
            }
        }
        string::iterator it = num1.begin();
        if(carry == 1) num1.insert(it, '1');
        return num1;
    }
};